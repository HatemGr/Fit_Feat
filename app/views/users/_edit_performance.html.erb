  <div class="card" >
      <p class="card-title"> Edite tes performance </p>
      <p class="card-icon"> <i class="fa-solid fa-pen-to-square" ></i> </p>
      
      <div class="tab">
        <button class="tablinks first-tab" onclick="openPerf(event, 'Climbing')" id="defaultOpen">Climbing</button>
        <button class="tablinks" onclick="openPerf(event, 'Running')">Running</button>
        <button class="tablinks" onclick="openPerf(event, 'Workout')">Workout</button>
        <button class="tablinks" onclick="openPerf(event, 'Tennis')">Tennis</button>
      </div>

      <div id="Climbing" class="tabcontent tab-active" style="display:block">
      <%if !current_user.climbing_perf.empty?%>
        <%= render partial: 'users/performances/climbing_edit_form', locals: {user: current_user} %>
        <div style="display:none" id="level-perf">
        <% current_user.climbing_perf.each_with_index do |climbing, i|%>
          <p>  <%= climbing.level%> </p>
        <%end%>
        </div>
        <div style="display:none" id="date-perf">
        <% current_user.climbing_perf.each_with_index do |climbing, i|%>
          <p>  <%= climbing.created_at.strftime("%d/%m/%Y")%> </p>
          <br>
        <%end%>
        </div>
          <canvas id="myChart" width="100" height="100"></canvas>

      <%else%>
        <div class="">Veux tu faire ce sport ?</div>
        <%= link_to 'Je commence l\'escalade !', sport_users_path(sport: :Climbing), method: :post, :class => "btn-begin begin-#{"climbing"}", remote: true%>
      <%end%>
      </div>

      <div id="Running" class="tabcontent">
      <%if !current_user.running_perf.empty?%>
        <%= render partial: 'users/performances/running_edit_form', locals: {user: current_user} %>
      <%else%>
        <div class="tbd">Veux tu faire ce sport ?</div>
        <%= link_to 'Je commence le Running !', sport_users_path(sport: :Running), method: :post, :class => "btn-begin begin-#{"running"}", remote: true%>
      <%end%>
      </div>

      <div id="Workout" class="tabcontent">
      <%if !current_user.workout_perf.empty?%>
        <%= render partial: 'users/performances/workout_edit_form', locals: {user: current_user} %>
        <%else%>
        <div class="tbd">Veux tu faire ce sport ?</div>
        <%= link_to 'Je commence le Workout !', sport_users_path(sport: :Workout), method: :post,:class => "btn-begin begin-#{"Workout"}", remote: true%>
      <%end%>
      </div>

      <div id="Tennis" class="tabcontent">
      <%if !current_user.tennis_perf.empty? %>
      <%= render partial: 'users/performances/tennis_edit_form', locals: {user: current_user} %>
        <%else%>
        <div class="tbd">Veux tu faire ce sport ?</div>
        <%= link_to 'Je commence le Tennis !', sport_users_path(sport: :Tennis), method: :post, :class => "btn-begin begin-#{"Tennis"}", remote: true%>
      <%end%>
      </div>
  </div>


<script>
const ctx = document.getElementById('myChart').getContext('2d');


const levelPerf = document.getElementById('level-perf').childNodes;
const levelPerfLenght = Math.ceil(levelPerf.length)

var arrayLevel = []
for (var i = 1; i < levelPerfLenght; i += 2) {
  arrayLevel.push(levelPerf[i].innerHTML);
}
const newArrayLevel = Object.values(arrayLevel);

console.log(newArrayLevel);


const datePerf = document.getElementById('date-perf').childNodes;
const datePerfLenght = Math.ceil(datePerf.length)

var arraydate = []
for (var i = 1; i < datePerfLenght; i += 4) {
  arraydate.push(datePerf[i].innerHTML);
}
const newArrayDate = Object.values(arraydate);

console.log(newArrayDate);



const myChart = new Chart(ctx, {
    type: 'line',
    
    data: {
        labels: newArrayDate,
        datasets: [{
            barThickness: 70,

            label: 'EVOLUTION DE TON NIVEAU',
            data: newArrayLevel,
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
      responsive: true,
      aspectRatio: 5,
      maintainAspectRatio: true,
    },
});
</script>
